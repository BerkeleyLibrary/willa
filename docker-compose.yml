services:
  db:
    image: postgres:16
    restart: always
    environment: &dbconfig
      POSTGRES_DB: ${POSTGRES_DB:-willa}
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-root}@db/${POSTGRES_DB:-willa}}
    ports:
      - 5432:5432
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-root} -d ${POSTGRES_DB:-willa}"]
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    image: ${DOCKER_APP_IMAGE:-willa:local}
    init: true
    restart: always
    ports:
      - 8000:8000
    env_file: .env
    environment:
      <<: *dbconfig
      EXTRA_VERSION: ${EXTRA_VERSION:-}
      DEPLOYMENT_ID: ${DEPLOYMENT_ID:-compose-unknown}
    volumes:
      - ./.data/lancedb:/lancedb
      - ./tmp:/pdfs
      - ./willa:/app/willa:rw

  ollama:
    profiles:
      - ollama
    image: ollama/ollama
    restart: always
    ports:
      - 11434:11434
    volumes:
      - ./ollama:/root/.ollama:rw
      - ./models:/models

  prisma:
    profiles:
      - prisma
    build:
      context: .
      dockerfile: Dockerfile.prisma
    restart: always
    environment: *dbconfig
    ports:
      - 5555:5555
    depends_on:
      db:
        condition: service_healthy

  localstack:
    profiles:
      - localstack
    container_name: "localstack-main"
    image: localstack/localstack:4.7
    restart: always
    ports:
      - 4566:4566
    environment:
      SERVICES: s3
      LANCEDB_URI:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      DEBUG: ${DEBUG:-0}
    volumes:
      - "./bin/init-s3.sh:/etc/localstack/init/ready.d/init-s3.sh"
      - ./.data/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
